반갑습니다! 저장은 컨트롤에스
오늘의 내용저장
add-> commit -> push //순차적 업로드

tracked, untracked //변화상태를 추적합니다.

staged, unstaged //공연이 시작됩니다.

git init //저장 공간을 만들어줍니다.
git add a.txt 
git commit -m "메시지" a.txt

git remote add origin (깃헙주소) //오리진 주소 사이 띄어쓰기 유의합니다.
git push -u origin master //다음부터는 git push만 써도 됩니다. 바로바로 업로드 가능.

<배제 명령>
git rm --cached b.txt // --cached가 있으면 온라인은 지워지지만, 내 저장소에는 파일이 남습니다.
-즉, rm만 하면 unstaged 상태에서만 끝납니다.-

git commit -m "확인사살" //절대 b.txt를 적어주지 않습니다.
-커밋까지 확실히 해야 최종적으로 untracked 상태가 되며, 더 이상 변화상태(Modified)를 추적하지 않습니다!!-

<클론 폴더 받아오기>
클론 대상의 깃헙으로 가서 주소를 카피합니다.
git clone (대상 폴더 주소) //하면 뚝딱입니다. 내 피시에 업로드됨.

도스창 이동은 cd입니다!! 
// cd 띄어쓰고 이동할 폴더 바로 드래그하면 됩니다.

<untracked와 unstaged의 차이>
커밋은 로컬 리파지토리에 저장한 것

푸시는 리모트 리파지토리에 반영하는 것

 untrackes: git에서 이력관리대상에 등록되지 않은  파일
 unstaged: git이 관리대상으로 포함한 파일이나 staged 상태가 아니므로 이력저장(commit)을 할때 저장 대상에서 제외되는 파일

 push는 바로 이 commit들을 모아모아 올리는 것이다!!(최종제출느낌)   